package net.lirent.recipemanager.model;

import lombok.*;
import net.lirent.recipemanager.utility.Category;

import javax.persistence.*;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * <p>
 * Entity class for the Recipes.
 * Getter, setter and other stuff are generated by lombok.
 *</p>
 *
 * @author Lirent
 */

@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Builder
@Table(name = "RECIPE")
public class Recipe {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    @NonNull
    private String title;
    private Category category;
    private Integer servings;
    private String author;

    @OneToMany(cascade = CascadeType.ALL)
    @JoinColumn(name = "recipe_id")
    //@JsonManagedReference
    private List<Ingredient> ingredients = new ArrayList<>();

    @OneToMany(cascade = CascadeType.ALL)
    @JoinColumn(name = "recipe_id")
    //@JsonManagedReference(value="instructions")
    private List<Instruction> instructions = new ArrayList<>();

    @Column(name = "TS_VERSION", columnDefinition="TIMESTAMP(6)")
    @Version
    private Timestamp tsVersion;

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Recipe recipe = (Recipe) o;
        return id.equals(recipe.id) && title.equals(recipe.title) && category == recipe.category && Objects.equals(servings, recipe.servings) && Objects.equals(author, recipe.author) && Objects.equals(ingredients, recipe.ingredients) && Objects.equals(instructions, recipe.instructions);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, title, category, servings, author, ingredients, instructions);
    }

    @Override
    public String toString() {
        return "Recipe{" +
                "id=" + id +
                ", title='" + title + '\'' +
                ", category=" + category +
                ", servings=" + servings +
                ", author='" + author + '\'' +
                ", ingredients=" + ingredients +
                ", instructions=" + instructions +
                ", tsVersion=" + tsVersion +
                '}';
    }
}
